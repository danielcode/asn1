TestModel DEFINITIONS ::= BEGIN -- Module parameters preamble
  SimpleSequence ::= SEQUENCE {
    simpleInt    INTEGER,
    simpleInt2   INTEGER,
    simpleString IA5String,
    simpleReal   REAL,
    simpleBool   BOOLEAN,
    simpleNull   NULL,
	simpleOptInt INTEGER OPTIONAL,
    optNull      NULL OPTIONAL -- Hardly simple
  }

  TestType ::= INTEGER
  Test2Type ::= TestType
  Test3Type ::= Test2Type
  RealTest ::= REAL
  BoolTest ::= BOOLEAN
  NullTest ::= NULL

  TestChoice ::= CHOICE {
    int1 [0] INTEGER,
    int2 [1] INTEGER
  }

  TestIntSequence ::= SEQUENCE OF INTEGER

  TestEnumerated ::= ENUMERATED {
    one,
    two,
    three
  }

  TestSequence ::= SEQUENCE {
    str     UTF8String,
    testVar TestType
  }

  TestSequenceOf ::= SEQUENCE OF TestSequence

  TestSet ::= SET {
    testSequence TestSequence,
    num          Test2Type
  }

  TestSetOf ::= SET OF TestSequence

  AnonSequence ::= SEQUENCE {
    sequence1 SEQUENCE {
      sequence2 SEQUENCE {
        sequence3 TestSequence,
        level3 INTEGER
      },
      level2 TestType
    },
    level1 Test2Type,
    testSequence TestSequence
  }

  DerivedAnonSequence ::= AnonSequence

  String1 ::= IA5String
  String2 ::= UTF8String

  RecursiveSequence ::= SEQUENCE {
    anonSequence      AnonSequence,
    recursiveSequence RecursiveSequence
  }

END
